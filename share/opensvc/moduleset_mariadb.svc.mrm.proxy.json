{
    "modulesets": [
        {
            "modules": [],
            "rulesets": [],
            "modset_name": "mariadb.svc.mrm.proxy",
            "modulesets": [
                "mariadb.svc.mrm.proxy.cnf"
            ],
            "publications": [
                "replication-manager"
            ],
            "id": 346,
            "responsibles": [
                "replication-manager"
            ]
        },
        {
            "modules": [
                {
                    "autofix": false,
                    "modset_mod_name": "mariadb.svc.mrm.proxy.cnf"
                }
            ],
            "rulesets": [
                "mariadb.svc.mrm.proxy.cnf"
            ],
            "modset_name": "mariadb.svc.mrm.proxy.cnf",
            "modulesets": [],
            "publications": [
                "replication-manager"
            ],
            "id": 347,
            "responsibles": [
                "replication-manager"
            ]
        }
    ],
    "filtersets": [
        {
            "fset_stats": false,
            "id": 253,
            "filters": [
                {
                    "filter": {
                        "f_op": "=",
                        "f_field": "os_name",
                        "f_value": "linux",
                        "f_table": "nodes",
                        "id": 207
                    },
                    "f_order": 0,
                    "f_log_op": "AND",
                    "filterset": null
                }
            ],
            "fset_name": "linux servers"
        },
        {
            "fset_stats": false,
            "id": 254,
            "filters": [
                {
                    "filter": {
                        "f_op": "=",
                        "f_field": "os_name",
                        "f_value": "darwin",
                        "f_table": "nodes",
                        "id": 208
                    },
                    "f_order": 0,
                    "f_log_op": "AND",
                    "filterset": null
                }
            ],
            "fset_name": "servers osx"
        },
        {
            "fset_stats": false,
            "id": 255,
            "filters": [
                {
                    "filter": {
                        "f_op": "=",
                        "f_field": "res_type",
                        "f_value": "container.docker",
                        "f_table": "resmon",
                        "id": 209
                    },
                    "f_order": 0,
                    "f_log_op": "AND",
                    "filterset": null
                }
            ],
            "fset_name": "mariadb.svc.prov.docker"
        },
        {
            "fset_stats": false,
            "id": 256,
            "filters": [
                {
                    "filter": null,
                    "f_order": 0,
                    "f_log_op": "AND NOT",
                    "filterset": "mariadb.svc.prov.docker"
                }
            ],
            "fset_name": "mariadb.svc.prov.pkg"
        }
    ],
    "rulesets": [
        {
            "fset_name": null,
            "ruleset_name": "mariadb.svc.basedir",
            "variables": [],
            "ruleset_public": false,
            "ruleset_type": "explicit",
            "rulesets": [
                "mariadb.svc.basedir.darwin",
                "mariadb.svc.basedir.not.darwin"
            ],
            "publications": [
                "replication-manager"
            ],
            "id": 989,
            "responsibles": [
                "replication-manager"
            ]
        },
        {
            "fset_name": null,
            "ruleset_name": "mariadb.svc.basedir.darwin",
            "variables": [
                {
                    "var_author": "replication-manager replication-manager@localhost.localdomain",
                    "var_class": "raw",
                    "var_value": "/svc/%%ENV:SERVICES_SVCNAME%%",
                    "var_updated": "2017-06-21 17:04:14",
                    "var_name": "base_dir",
                    "id": 5873
                }
            ],
            "ruleset_public": false,
            "ruleset_type": "contextual",
            "rulesets": [],
            "publications": [
                "replication-manager"
            ],
            "id": 990,
            "responsibles": [
                "replication-manager"
            ]
        },
        {
            "fset_name": null,
            "ruleset_name": "mariadb.svc.basedir.not.darwin",
            "variables": [
                {
                    "var_author": "replication-manager replication-manager@localhost.localdomain",
                    "var_class": "raw",
                    "var_value": "/Users/%%ENV:SVC_USERNAME%%/%%ENV:SERVICES_SVCNAME%%",
                    "var_updated": "2017-06-21 17:04:14",
                    "var_name": "base_dir",
                    "id": 5874
                }
            ],
            "ruleset_public": false,
            "ruleset_type": "contextual",
            "rulesets": [],
            "publications": [
                "replication-manager"
            ],
            "id": 991,
            "responsibles": [
                "replication-manager"
            ]
        },
        {
            "fset_name": null,
            "ruleset_name": "mariadb.svc.env",
            "variables": [
                {
                    "var_author": "replication-manager replication-manager@localhost.localdomain",
                    "var_class": "raw",
                    "var_value": "999",
                    "var_updated": "2017-06-21 17:04:14",
                    "var_name": "mysql_gid",
                    "id": 5875
                },
                {
                    "var_author": "replication-manager replication-manager@localhost.localdomain",
                    "var_class": "raw",
                    "var_value": "999",
                    "var_updated": "2017-06-21 17:04:14",
                    "var_name": "mysql_uid",
                    "id": 5876
                },
                {
                    "var_author": "replication-manager replication-manager@localhost.localdomain",
                    "var_class": "raw",
                    "var_value": "660",
                    "var_updated": "2017-06-21 17:04:14",
                    "var_name": "cnf_perms",
                    "id": 5877
                }
            ],
            "ruleset_public": false,
            "ruleset_type": "explicit",
            "rulesets": [
                "mariadb.svc.basedir",
                "mariadb.svc.env.osx",
                "mariadb.svc.env.linux"
            ],
            "publications": [
                "replication-manager"
            ],
            "id": 992,
            "responsibles": [
                "replication-manager"
            ]
        },
        {
            "fset_name": "servers osx",
            "ruleset_name": "mariadb.svc.env.osx",
            "variables": [
                {
                    "var_author": "replication-manager replication-manager@localhost.localdomain",
                    "var_class": "raw",
                    "var_value": "777",
                    "var_updated": "2017-06-21 17:04:14",
                    "var_name": "binded_dir_perms",
                    "id": 5878
                }
            ],
            "ruleset_public": false,
            "ruleset_type": "contextual",
            "rulesets": [
                "mariadb.svc.env.osx.pkg"
            ],
            "publications": [
                "replication-manager"
            ],
            "id": 993,
            "responsibles": [
                "replication-manager"
            ]
        },
        {
            "fset_name": "linux servers",
            "ruleset_name": "mariadb.svc.env.linux",
            "variables": [
                {
                    "var_author": "replication-manager replication-manager@localhost.localdomain",
                    "var_class": "raw",
                    "var_value": "775",
                    "var_updated": "2017-06-21 17:04:14",
                    "var_name": "binded_dir_perms",
                    "id": 5879
                }
            ],
            "ruleset_public": false,
            "ruleset_type": "contextual",
            "rulesets": [
                "mariadb.svc.env.linux.pkg"
            ],
            "publications": [
                "replication-manager"
            ],
            "id": 994,
            "responsibles": [
                "replication-manager"
            ]
        },
        {
            "fset_name": "mariadb.svc.prov.pkg",
            "ruleset_name": "mariadb.svc.env.osx.pkg",
            "variables": [
                {
                    "var_author": "replication-manager replication-manager@localhost.localdomain",
                    "var_class": "raw",
                    "var_value": "mysql",
                    "var_updated": "2017-06-21 17:04:14",
                    "var_name": "mysql_gid",
                    "id": 5880
                },
                {
                    "var_author": "replication-manager replication-manager@localhost.localdomain",
                    "var_class": "raw",
                    "var_value": "mysql",
                    "var_updated": "2017-06-21 17:04:14",
                    "var_name": "mysql_uid",
                    "id": 5881
                }
            ],
            "ruleset_public": false,
            "ruleset_type": "contextual",
            "rulesets": [],
            "publications": [
                "replication-manager"
            ],
            "id": 995,
            "responsibles": [
                "replication-manager"
            ]
        },
        {
            "fset_name": "mariadb.svc.prov.pkg",
            "ruleset_name": "mariadb.svc.env.linux.pkg",
            "variables": [
                {
                    "var_author": "replication-manager replication-manager@localhost.localdomain",
                    "var_class": "raw",
                    "var_value": "mysql",
                    "var_updated": "2017-06-21 17:04:14",
                    "var_name": "mysql_gid",
                    "id": 5882
                },
                {
                    "var_author": "replication-manager replication-manager@localhost.localdomain",
                    "var_class": "raw",
                    "var_value": "mysql",
                    "var_updated": "2017-06-21 17:04:14",
                    "var_name": "mysql_uid",
                    "id": 5883
                }
            ],
            "ruleset_public": false,
            "ruleset_type": "contextual",
            "rulesets": [],
            "publications": [
                "replication-manager"
            ],
            "id": 996,
            "responsibles": [
                "replication-manager"
            ]
        },
        {
            "fset_name": null,
            "ruleset_name": "mariadb.svc.mrm.proxy.cnf",
            "variables": [
                {
                    "var_author": "replication-manager replication-manager@localhost.localdomain",
                    "var_class": "file",
                    "var_value": "{\"path\":\"/%%ENV:SVC_CONF_ENV_BASE_DIR%%/%%ENV:POD%%/conf/\",\"mode\":\"%%ENV:BINDED_DIR_PERMS%%\",\"uid\":\"%%ENV:MYSQL_UID%%\",\"gid\":\"%%ENV:MYSQL_GID%%\"}",
                    "var_updated": "2017-06-21 17:04:15",
                    "var_name": "proxy_cnf_dir_conf",
                    "id": 5917
                },
                {
                    "var_author": "replication-manager replication-manager@localhost.localdomain",
                    "var_class": "file",
                    "var_value": "{\"path\":\"/%%ENV:SVC_CONF_ENV_BASE_DIR%%/%%ENV:POD%%/data/\",\"mode\":\"%%ENV:BINDED_DIR_PERMS%%\",\"uid\":\"%%ENV:MYSQL_UID%%\",\"gid\":\"%%ENV:MYSQL_GID%%\"}",
                    "var_updated": "2017-06-21 17:04:15",
                    "var_name": "proxy_cnf_dir_data",
                    "id": 5918
                },
                {
                    "var_author": "replication-manager replication-manager@localhost.localdomain",
                    "var_class": "file",
                    "var_value": "{\"path\":\"/%%ENV:SVC_CONF_ENV_BASE_DIR%%/%%ENV:POD%%/log/\",\"mode\":\"%%ENV:BINDED_DIR_PERMS%%\",\"uid\":\"%%ENV:MYSQL_UID%%\",\"gid\":\"%%ENV:MYSQL_GID%%\"}",
                    "var_updated": "2017-06-21 17:04:15",
                    "var_name": "proxy_cnf_dir_log",
                    "id": 5919
                },
                {
                    "var_author": "replication-manager replication-manager@localhost.localdomain",
                    "var_class": "file",
                    "var_value": "{\"path\":\"/%%ENV:SVC_CONF_ENV_BASE_DIR%%/%%ENV:POD%%/conf/keepalived.conf\",\"mode\":\"%%ENV:BINDED_DIR_PERMS%%\",\"uid\":\"%%ENV:MYSQL_UID%%\",\"gid\":\"%%ENV:MYSQL_GID%%\",\"fmt\":\"global_defs { \\n notification_email { stephane@mariadb.com } \\n notification_email_from keepalived@lb-3d9d6604 \\n smtp_server localhost \\n smtp_connect_timeout 30 \\n# This should be unique. \\n router_id 100 \\n} \\nvrrp_instance mysql_pool { \\n# The interface we listen on. interface eth1 \\n# The default state, one should be master, the others should be set to SLAVE.\\nstate %%ENV:STATE%% \\n \\n# This should be the same on all participating load balancers. \\nvirtual_router_id 100 \\npriority %%ENV:VRRP_PRIO%% \\n# Set the interface whose status to track to trigger a failover. \\n\\ntrack_interface { \\n eth1 \\n} \\n\\n# Password for the loadbalancers to share. \\nauthentication { \\n  auth_type PASS \\n  auth_pass 1111 \\n} \\n\\n# This is the IP address that floats between the loadbalancers. \\nvirtual_ipaddress { \\n  %%ENV:SVC_CONF_ENV_VIP_ADDR%%/%%ENV:SVC_CONF_ENV_VIP_NETMASK%% \\n}\\n \\n}\"}",
                    "var_updated": "2017-06-21 17:04:15",
                    "var_name": "proxy_cnf_keepalived",
                    "id": 5920
                },
                {
                    "var_author": " Manager",
                    "var_class": "file",
                    "var_value": "{\"path\":\"/%%ENV:SVC_CONF_ENV_BASE_DIR%%/%%ENV:POD%%/conf/maxscale.cnf\",\"mode\":\"%%ENV:BINDED_DIR_PERMS%%\",\"uid\":\"%%ENV:MYSQL_UID%%\",\"gid\":\"%%ENV:MYSQL_GID%%\",\"fmt\":\"[MaxScale]\\n#threads=auto\\n\\n[MaxInfo]\\ntype=service\\nrouter=maxinfo\\nuser=monitor\\npasswd=EBD2F49C3B375812A8CDEBA632ED8BBC\\n\\n[MaxInfo JSON Listener]\\ntype=listener\\nservice=MaxInfo\\nprotocol=HTTPD\\nport=%%ENV:SVC_CONF_ENV_PORT_HTTP%%\\naddress=%%ENV:SERVER_IP%%\\n\\n[MySQL Monitor]\\ntype=monitor\\nmodule=mysqlmon\\nservers=%%ENV:SERVERS_LIST%%\\nuser=root\\npasswd=%%ENV:SVC_CONF_ENV_MYSQL_ROOT_PASSWORD%%\\nmonitor_interval=500\\ndetect_stale_master=true\\ndetect_stale_slave=true\\ndetect_standalone_master=true\\n\\n[Debug Interface]\\ntype=service\\nrouter=debugcli\\n\\n[Read Write Connection Listener]\\ntype=listener\\nservice=Read Write Connection Router\\nprotocol=MySQLClient\\nport=%%ENV:SVC_CONF_ENV_PORT_RW_SPLIT%%\\naddress=%%ENV:SERVER_IP%%\\n\\n[Write Connection Listener]\\ntype=listener\\nservice=Write Connection Router\\nprotocol=MySQLClient\\nport=%%ENV:SVC_CONF_ENV_PORT_RW%%\\naddress=%%ENV:SERVER_IP%%\\n\\n[Read Write Connection Router]\\ntype=service\\nrouter=readwritesplit\\nlocalhost_match_wildcard_host=1\\nuser=root\\npasswd=%%ENV:SVC_CONF_ENV_MYSQL_ROOT_PASSWORD%%\\nmax_slave_connections=100%\\nrouter_options=master_accept_reads=1,slave_selection_criteria=LEAST_GLOBAL_CONNECTIONS\\nenable_root_user=true\\nservers=%%ENV:SERVERS_LIST%%\\n\\n[Write Connection Router]\\ntype=service\\nrouter=readconnroute\\nrouter_options=master\\nservers=%%ENV:SERVERS_LIST%%\\nuser=root\\npasswd=%%ENV:SVC_CONF_ENV_MYSQL_ROOT_PASSWORD%%\\nenable_root_user=true\\n\\n[Replication]\\ntype=service\\nrouter=binlogrouter\\nversion_string=5.6.17-log\\nuser=root\\npasswd=%%ENV:SVC_CONF_ENV_MYSQL_ROOT_PASSWORD%%\\nrouter_options=server-id=999,user=root,password=%%ENV:SVC_CONF_ENV_MYSQL_ROOT_PASSWORD%%,binlogdir=/var/cache/maxscale/\\n\\n[Replication Listener]\\ntype=listener\\nservice=Replication\\nprotocol=MySQLClient\\nport=%%ENV:SVC_CONF_ENV_PORT_BINLOG%%\\naddress=%%ENV:SERVER_IP%%\\n\\n#[Debug Listener]\\n#type=listener\\n#service=Debug Interface\\n#protocol=telnetd\\n#port=%%ENV:SVC_CONF_ENV_PORT_TELNET%%\\n\\n[CLI]\\ntype=service\\nrouter=cli\\n\\n[CLI Listener]\\ntype=listener\\nservice=CLI \\nprotocol=maxscaled\\nport=%%ENV:SVC_CONF_ENV_PORT_ADMIN%%\\naddress=%%ENV:SERVER_IP%%\\n\\n%%ENV:SERVERS%%\\n\"}",
                    "var_updated": "2017-07-23 15:10:23",
                    "var_name": "proxy_cnf_maxscale",
                    "id": 5921
                },
                {
                    "var_author": "replication-manager replication-manager@localhost.localdomain",
                    "var_class": "file",
                    "var_value": "{\"path\":\"/%%ENV:SVC_CONF_ENV_BASE_DIR%%/%%ENV:POD%%/conf/config-haproxy.toml\",\"mode\":\"%%ENV:BINDED_DIR_PERMS%%\",\"uid\":\"%%ENV:MYSQL_UID%%\",\"gid\":\"%%ENV:MYSQL_GID%%\",\"fmt\":\"# TOPOLOGY\\n# --------\\nhosts = \\\"%%ENV:SVC_CONF_ENV_BACKEND_IPS%%\\\"\\nuser = \\\"root:%%ENV:SVC_CONF_ENV_MYSQL_ROOT_PASSWORD%%\\\"\\nrpluser = \\\"root:%%ENV:SVC_CONF_ENV_MYSQL_ROOT_PASSWORD%%\\\"\\ntitle = \\\"%%ENV:SERVICES_SVCNAME%%/%%ENV:POD%%\\\"\\n\\nconnect-timeout = 1\\n \\n\\n# config.toml\\n# Example replication-manager configuration file\\n\\n# LOG\\n# ---\\n\\n#logfile = \\\"./dashboard/replication-manager.log\\\"\\n#verbose = true\\n\\n#spider = true\\n# HTTP\\n# ----\\n\\nhttp-server = true  \\nhttp-bind-address = \\\"0.0.0.0\\\"\\nhttp-port = \\\"%%ENV:SVC_CONF_ENV_PORT_HTTP%%\\\"\\n# http-root = \\\"./dashboard\\\"\\n\\n# ALERTS\\n# ------\\n\\n#mail-from = \\\"mrm@localhost\\\"\\n#mail-smtp-addr = \\\"localhost:25\\\"\\n#mail-to = \\\"mrm@mariadb.com\\\"\\n\\n# FAILOVER\\n# --------\\n\\n# Automatically rejoin a failed server to the current master\\n# Slaves will re enter with read-only\\n# Wait 5 seconds before killing long running transactions\\n\\nautorejoin = true\\nreadonly = true\\nwait-kill = 5000\\npost-failover-script = \\\"\\\"\\npre-failover-script =\\\"\\\"\\n\\n# CHECK\\n# -----\\n\\ncheck-type = \\\"tcp\\\"\\n\\n# Failover after N failures detection\\n# Failover is stopped after N failovers\\n# Wait N seconds for next failover\\n# Don't initiate failover unless slaves are fully in sync\\n# Don't failover when replication pass delay\\n\\nfailcount = 5\\nfailover-limit = 3\\nfailover-time-limit = 10\\ngtidcheck = true\\nmaxdelay = 30\\n\\n# HA PROXY WRAPPER MODE\\n# ---------------------\\nhaproxy = true \\nhaproxy-binary-path = \\\"/usr/sbin/haproxy\\\"\\n# Read write traffic\\nhaproxy-write-port= %%ENV:SVC_CONF_ENV_PORT_RW%%\\n# Read only load balance least connection traffic\\nhaproxy-read-port=%%ENV:SVC_CONF_ENV_PORT_R_LB%%\\n\"}",
                    "var_updated": "2017-06-21 17:04:15",
                    "var_name": "proxy_cnf_mrm",
                    "id": 5922
                },
                {
                    "var_author": "replication-manager replication-manager@localhost.localdomain",
                    "var_class": "file",
                    "var_value": "{\"path\":\"/%%ENV:SVC_CONF_ENV_BASE_DIR%%/%%ENV:POD%%/conf/config.toml\",\"mode\":\"%%ENV:BINDED_DIR_PERMS%%\",\"uid\":\"%%ENV:MYSQL_UID%%\",\"gid\":\"%%ENV:MYSQL_GID%%\",\"fmt\":\"# TOPOLOGY\\n# --------\\nhosts = \\\"%%ENV:SVC_CONF_ENV_BACKEND_IPS%%\\\"\\nuser = \\\"root:%%ENV:SVC_CONF_ENV_MYSQL_ROOT_PASSWORD%%\\\"\\nrpluser = \\\"root:%%ENV:SVC_CONF_ENV_MYSQL_ROOT_PASSWORD%%\\\"\\ntitle = \\\"%%ENV:SERVICES_SVCNAME%%/%%ENV:POD%%\\\"\\n\\nconnect-timeout = 1\\n \\n\\n# config.toml\\n# Example replication-manager configuration file\\n\\n# LOG\\n# ---\\n\\n#logfile = \\\"./dashboard/replication-manager.log\\\"\\n#verbose = true\\n\\n#spider = true\\n# HTTP\\n# ----\\n\\nhttp-server = true  \\nhttp-bind-address = \\\"0.0.0.0\\\"\\nhttp-port = \\\"%%ENV:SVC_CONF_ENV_PORT_HTTP%%\\\"\\n# http-root = \\\"./dashboard\\\"\\n\\n# ALERTS\\n# ------\\n\\n#mail-from = \\\"mrm@localhost\\\"\\n#mail-smtp-addr = \\\"localhost:25\\\"\\n#mail-to = \\\"mrm@mariadb.com\\\"\\n\\n# FAILOVER\\n# --------\\n\\n# Automatically rejoin a failed server to the current master\\n# Slaves will re enter with read-only\\n# Wait 5 seconds before killing long running transactions\\n\\nautorejoin = true\\nreadonly = true\\nwait-kill = 5000\\npost-failover-script = \\\"\\\"\\npre-failover-script =\\\"\\\"\\n\\n# CHECK\\n# -----\\n\\ncheck-type = \\\"tcp\\\"\\n\\n# Failover after N failures detection\\n# Failover is stopped after N failovers\\n# Wait N seconds for next failover\\n# Don't initiate failover unless slaves are fully in sync\\n# Don't failover when replication pass delay\\n\\nfailcount = 5\\nfailover-limit = 3\\nfailover-time-limit = 10\\n#gtidcheck = true\\nmaxdelay = 30\\n\\n# HA PROXY WRAPPER MODE\\n# ---------------------\\n#haproxy = true \\n#haproxy-binary-path = \\\"/usr/sbin/haproxy\\\"\\n# Read write traffic\\n#haproxy-write-port= %%ENV:SVC_CONF_ENV_PORT_RW%%\\n# Read only load balance least connection traffic\\n#haproxy-read-port=%%ENV:SVC_CONF_ENV_PORT_R_LB%%\\n\"}",
                    "var_updated": "2017-06-21 17:04:15",
                    "var_name": "proxy_cnf_mrm_mx",
                    "id": 5923
                },
                {
                    "var_author": " Manager",
                    "var_class": "file",
                    "var_value": "{\"path\":\"%%ENV:SVC_CONF_ENV_BASE_DIR%%/%%ENV:POD%%/init/launcher\",\"mode\":755,\"uid\":\"%%ENV:MYSQL_UID%%\",\"gid\":\"%%ENV:MYSQL_GID%%\",\"fmt\":\"#!/bin/bash\\n\\nBASE_DIR=%%ENV:SVC_CONF_ENV_BASE_DIR%%/%%ENV:POD%%\\nSERVER_IP=%%ENV:SERVER_IP%%\\nSERVER_PORT=%%ENV:SVC_CONF_ENV_PORT_ADMIN%%\\nUSER=admin\\nMAXSCALE_ROOT_PASSWORD=mariadb\\nfunction _status {\\n        maxadmin -u $USER -h $SERVER_IP -P $SERVER_PORT -p$MAXSCALE_ROOT_PASSWORD help\\n}\\n\\nfunction _stop {\\n        maxadmin -u $USER -h $SERVER_IP -P $SERVER_PORT -p$MAXSCALE_ROOT_PASSWORD shutdown maxscale\\n}\\n\\nfunction _start {\\n\\tmaxscale -d --config=$BASE_DIR/conf/maxscale.cnf --datadir=$BASE_DIR/data --logdir=$BASE_DIR/data --piddir=$BASE_DIR/data &\\n}\\n\\ncase $1 in\\nstart)\\n        _status && {\\n                echo \\\"already started\\\"\\n                exit 0\\n        }\\n        _start\\n        ;;\\nstop)\\n        _status || {\\n                echo \\\"already stopped\\\"\\n                exit 0\\n        }\\n        _stop\\n        ;;\\nstatus)\\n        _status\\n        exit $?\\n        ;;\\ninfo)\\n        ;;\\nesac\\n\\n\"}",
                    "var_updated": "2017-07-17 12:13:07",
                    "var_name": "proxy_cnf_launcher",
                    "id": 5926
                },
                {
                    "var_author": "replication-manager replication-manager@localhost.localdomain",
                    "var_class": "file",
                    "var_value": "{\"path\":\"/%%ENV:SVC_CONF_ENV_BASE_DIR%%/%%ENV:POD%%/init/\",\"mode\":\"%%ENV:BINDED_DIR_PERMS%%\",\"uid\":\"%%ENV:MYSQL_UID%%\",\"gid\":\"%%ENV:MYSQL_GID%%\"}",
                    "var_updated": "2017-06-28 23:24:33",
                    "var_name": "proxy_cnf_dir_init",
                    "id": 5927
                }
            ],
            "ruleset_public": false,
            "ruleset_type": "explicit",
            "rulesets": [
                "mariadb.svc.env",
                "mariadb.svc.basedir",
                "mariadb.svc.mrm.proxt.cnf.haproxy"
            ],
            "publications": [
                "replication-manager"
            ],
            "id": 1000,
            "responsibles": [
                "replication-manager"
            ]
        },
        {
            "fset_name": null,
            "ruleset_name": "mariadb.svc.mrm.proxt.cnf.haproxy",
            "variables": [
                {
                    "var_author": " Manager",
                    "var_class": "file",
                    "var_value": "{\"path\":\"/%%ENV:SVC_CONF_ENV_BASE_DIR%%/%%ENV:POD%%/conf/haproxy.cfg\",\"mode\":\"%%ENV:BINDED_DIR_PERMS%%\",\"uid\":\"%%ENV:MYSQL_UID%%\",\"gid\":\"%%ENV:MYSQL_GID%%\",\"fmt\":\"global\\n pidfile /var/lib/replication-manager/ux_dck_zpool_loop-haproxy-private.pid\\n\\n daemon\\n maxconn 4096\\n stats socket /var/lib/replication-manager/ux_dck_zpool_loop-haproxy.stats.sock level admin\\n\\n\\n ###\\n #\\n # Experimental: Logging Setup\\n #\\n # We log to a unix socket and read that socket from the Go program\\n #\\n #\\n log /var/run/vamp.log.sock local0\\n\\n defaults\\n   log global\\n   mode http\\n   option dontlognull\\n   option redispatch\\n   option clitcpka\\n   option srvtcpka\\n\\n   retries 3\\n   maxconn 500000\\n\\n   # slowloris protection: clients should send their full http request in the configured time\\n   timeout http-request 5s\\n\\n   timeout connect 5000ms\\n   timeout client 50000s\\n   timeout server 50000s\\n\\nlisten stats\\n   bind :1988\\n   mode http\\n   stats enable\\n   stats uri /\\n   stats refresh 2s\\n   stats realm Haproxy\\\\ Stats\\n   \\n### BEGIN GENERATED SECTION ###\\n\\nfrontend my_write_frontend\\n    \\n    bind 0.0.0.0:3303\\n    \\n\\n    \\n     option tcplog \\n\\n\\n    ###\\n    #\\n    # Set logging and set the headers to capture\\n\\n    # capture request header X-Vamp-Server-CurrentTime len 50\\n    # capture response header X-Vamp-Server-ResponseTime len 50\\n    # capture response header X-Vamp-Server-Name len 50\\n\\n\\n    #log-format {\\\\ \\\"timestamp\\\"\\\\ :\\\\ %t,\\\\ \\\"frontend\\\"\\\\ :\\\\ \\\"%f\\\",\\\\ \\\"method\\\"\\\\ :\\\\ \\\"%r\\\",\\\\ \\\"captured_request_headers\\\"\\\\ :\\\\ \\\"%hrl\\\",\\\\ \\\"captures_response_headers\\\"\\\\ :\\\\ \\\"%hsl\\\"\\\\ }\\n\\n    #\\n    ###\\n\\n    \\n\\n    mode tcp\\n    \\n\\n    ###\\n    #\\n    # Spike/Rate Limiting & Quota Management\\n    #\\n    # We use a stick table to keep track of TCP connections rates and bytes send out.\\n    # On these metrics we set rules to designate upper limits. When limits are hit\\n    # we reroute the traffic to a specific abusers backend\\n\\n     # end HTTP spike limit generation\\n\\n     # end spike limit generation\\n\\n    ###\\n    # Filter Management\\n    #\\n    # set filters with optional negation\\n    #\\n\\n    \\n\\n    default_backend service_write\\n\\n\\nfrontend my_read_frontend\\n    \\n    bind 0.0.0.0:3302\\n    \\n\\n    \\n     option tcplog \\n\\n\\n    ###\\n    #\\n    # Set logging and set the headers to capture\\n\\n    # capture request header X-Vamp-Server-CurrentTime len 50\\n    # capture response header X-Vamp-Server-ResponseTime len 50\\n    # capture response header X-Vamp-Server-Name len 50\\n\\n\\n    #log-format {\\\\ \\\"timestamp\\\"\\\\ :\\\\ %t,\\\\ \\\"frontend\\\"\\\\ :\\\\ \\\"%f\\\",\\\\ \\\"method\\\"\\\\ :\\\\ \\\"%r\\\",\\\\ \\\"captured_request_headers\\\"\\\\ :\\\\ \\\"%hrl\\\",\\\\ \\\"captures_response_headers\\\"\\\\ :\\\\ \\\"%hsl\\\"\\\\ }\\n\\n    #\\n    ###\\n\\n    \\n\\n    mode tcp\\n    \\n\\n    ###\\n    #\\n    # Spike/Rate Limiting & Quota Management\\n    #\\n    # We use a stick table to keep track of TCP connections rates and bytes send out.\\n    # On these metrics we set rules to designate upper limits. When limits are hit\\n    # we reroute the traffic to a specific abusers backend\\n\\n     # end HTTP spike limit generation\\n\\n     # end spike limit generation\\n\\n    ###\\n    # Filter Management\\n    #\\n    # set filters with optional negation\\n    #\\n\\n    \\n\\n    default_backend service_read\\n\\n\\n\\n\\n\\n\\nbackend service_write\\n    mode tcp\\n#\\n# Regular HTTP/TCP backends\\n#\\n\\n   \\n    balance leastconn \\n\\n\\n\\n   \\n\\n   \\n    \\n        server leader 192.168.100.70:3306  weight 100 maxconn 2000 check inter 1000 \\n    \\n    \\n    \\n    \\n    \\n    \\n    \\n    \\n    \\n    \\n    \\n\\n\\n\\n\\n\\nbackend service_read\\n    mode tcp\\n#\\n# Regular HTTP/TCP backends\\n#\\n\\n   \\n    balance leastconn \\n\\n\\n\\n   \\n\\n   \\n    \\n        server 8194047115532167437 192.168.100.70:3306  weight 100 maxconn 2000 check inter 1000 \\n        server 1167504531203395275 192.168.100.71:3306  weight 100 maxconn 2000 check inter 1000 \\n    \\n    \\n    \\n    \\n    \\n    \\n    \\n    \\n    \\n    \\n    \\n\\n\\n\\n\\n\\n\\n### END GENERATED SECTION ###\"}",
                    "var_updated": "2017-08-16 10:34:05",
                    "var_name": "proxy_cnf_haproxy",
                    "id": 5959
                }
            ],
            "ruleset_public": false,
            "ruleset_type": "explicit",
            "rulesets": [],
            "publications": [
                "replication-manager"
            ],
            "id": 1019,
            "responsibles": [
                "replication-manager"
            ]
        }
    ]
}
